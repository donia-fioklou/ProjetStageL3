from django.db import models
from postgres_copy import CopyManager

class VotreModele(models.Model):
    code = models.CharField(max_length=50)
    nom_prenoms = models.CharField(max_length=100)
    sexe = models.CharField(max_length=10)
    contact = models.CharField(max_length=20)
    village = models.CharField(max_length=100)
    union = models.CharField(max_length=100)
    zone = models.CharField(max_length=50)
    code_surface = models.CharField(max_length=50)
    surface_parcelle = models.CharField(max_length=50)
    variete = models.CharField(max_length=50)
    si_parcelle = models.CharField(max_length=50)
    si_polygon = models.CharField(max_length=50)
    fin = models.CharField(max_length=50)
    nom_form = models.CharField(max_length=50)
    type_form = models.CharField(max_length=50)
    type_question = models.CharField(max_length=50)
    avez_vous = models.CharField(max_length=50)
    bio = models.CharField(max_length=50)
    type_question_1 = models.CharField(max_length=50)
    activite_principale = models.CharField(max_length=100)
    bio_1 = models.CharField(max_length=50)
    type_question_2 = models.CharField(max_length=50)
    si_autres_activites = models.CharField(max_length=200)
    bio_2 = models.CharField(max_length=50)
    type_question_3 = models.CharField(max_length=50)
    nb_personnes_en_charge = models.IntegerField()
    bio_3 = models.CharField(max_length=50)
    type_question_4 = models.CharField(max_length=50)
    appartenance_federation = models.CharField(max_length=50)
    bio_4 = models.CharField(max_length=50)
    type_question_5 = models.CharField(max_length=50)
    si_autres_nom_union = models.CharField(max_length=100)
    bio_5 = models.CharField(max_length=50)
    type_question_6 = models.CharField(max_length=50)
    prix_moyen_ventes_2021 = models.DecimalField(max_digits=10, decimal_places=2)
    bio_6 = models.CharField(max_length=50)
    type_question_7 = models.CharField(max_length=50)
    nb_employes = models.IntegerField()
    bio_7 = models.CharField(max_length=50)
    type_question_8 = models.CharField(max_length=50)
    nb_membres_famille = models.IntegerField()
    bio_8 = models.CharField(max_length=50)
    type_question_9 = models.CharField(max_length=50)
    votre_scoops = models.CharField(max_length=50)
    bio_9 = models.CharField(max_length=50)
    type_question_10 = models.CharField(max_length=50)
    qte_vendue_2021 = models.DecimalField(max_digits=10, decimal_places=2)
    bio_10 = models.CharField(max_length=50)
    type_question_11 = models.CharField(max_length=50)
    main_doeuvre_parcelle = models.CharField(max_length=100)
    bio_11 = models.CharField(max_length=50)
    fin_1 = models.CharField(max_length=50)
    nom_form_1 = models.CharField(max_length=50)
    type_form_1 = models.CharField(max_length=50)
    type_question_12 = models.CharField(max_length=50)
    statut_parcelle = models.CharField(max_length=50)
    bio_12 = models.CharField(max_length=50)
    type_question_13 = models.CharField(max_length=50)
    si_biologique_certification = models.CharField(max_length=100)
    bio_13 = models.CharField(max_length=50)
    type_question_14 = models.CharField(max_length=50)
    age_plantation = models.CharField(max_length=50)
    bio_14 = models.CharField(max_length=50)
    fin_2 = models.CharField(max_length=50)
    nom_form_2 = models.CharField(max_length=50)
    type_form_2 = models.CharField(max_length=50)
    type_question_15 = models.CharField(max_length=50)
    variete_2 = models.CharField(max_length=50)
    bio_15 = models.CharField(max_length=50)
    type_question_16 = models.CharField(max_length=50)
    nb_plants = models.IntegerField()
    bio_16 = models.CharField(max_length=50)
    type_question_17 = models.CharField(max_length=50)
    rendement_moyen = models.DecimalField(max_digits=10, decimal_places=2)
    bio_17 = models.CharField(max_length=50)
    type_question_18 = models.CharField(max_length=50)
    rendement_2021 = models.DecimalField(max_digits=10, decimal_places=2)
    bio_18 = models.CharField(max_length=50)
    fin_3 = models.CharField(max_length=50)
    objects = CopyManager()

    def __str__(self):
        return self.nom_prenoms
